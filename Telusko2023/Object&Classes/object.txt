A java object is an instance of java class. Each object has an identity, a behavior and a state.
    -The state of an object is stored in fields(variables), while methods(functions) display the objects behavior.
    -objects are created at runtime from templates(blueprints), which are also known as classes.
    -first we create a class and mention what kind of object we need then JVM will give us that object.
    -class file will compile to byte code which goes to JVM and JVM will give us object.

                             Difference between objects and classes

1)  Object is an instance of a class.	                  Class is a blueprint or template from which objects are created.
2)	Object is a real world entity such as 
pen, laptop, mobile, bed, keyboard, mouse, chair etc.	  Class is a group of similar objects.
3)	Object is a physical entity.	                      Class is a logical entity.
4)	Object is created through new keyword mainly e.g.
       Student s1=new Student();	                      Class is declared using class keyword e.g.
                                                          class Student{}
5)	Object is created many times as per requirement.	  Class is declared once.
6)	Object allocates memory when it is created.	          Class doesn't allocated memory when it is created.
7)	There are many ways to create object in java such as 
new keyword, newInstance() method, clone() method,
factory method and deserialization.	                      There is only one way to define class in java using class keyword.



JDK  - java development kit         -it compile the code to byte code, JDK has both JVM, and JRE.
JVM  - java virtual machine         -it execute the code (run), JVM is a part of JRE.
JRE  - java runtime enviroment      -extra file which we need in our code such as inbuilt classes, it also validate class, it loads the classes too.